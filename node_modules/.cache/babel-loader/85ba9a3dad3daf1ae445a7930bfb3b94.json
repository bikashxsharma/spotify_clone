{"ast":null,"code":"var _jsxFileName = \"/Users/shai-baba/Documents/prg/projects/spotify-clone/src/App.js\";\nimport React, { useEffect } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Login from './Components/Login';\nimport Player from './Views/Player';\nimport { getTokenFromResponse } from './util/spotify';\nimport { useStateProviderValue } from './Context/StateProvider';\nimport './App.css';\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{\n    token\n  }, dispatch] = useStateProviderValue();\n  useEffect(() => {\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n    }\n\n    if (token) {\n      spotify.setAccessToken(token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user\n        });\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists\n        });\n      });\n    }\n  }, [token]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, token ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Player, {\n    spotify: spotify,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/shai-baba/Documents/prg/projects/spotify-clone/src/App.js"],"names":["React","useEffect","SpotifyWebApi","Login","Player","getTokenFromResponse","useStateProviderValue","spotify","App","token","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","user","getUserPlaylists","playlists"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,oBAAT,QAAqC,gBAArC;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AAEA,OAAO,WAAP;AAEA,MAAMC,OAAO,GAAG,IAAIL,aAAJ,EAAhB;;AAEA,SAASM,GAAT,GAAe;AACb,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAYC,QAAZ,IAAwBJ,qBAAqB,EAAnD;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,IAAI,GAAGN,oBAAoB,EAAjC;AACAO,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AACA,QAAID,MAAJ,EAAY;AACVJ,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,WADC;AAEPP,QAAAA,KAAK,EAAEK;AAFA,OAAD,CAAR;AAID;;AAED,QAAIL,KAAJ,EAAW;AACTF,MAAAA,OAAO,CAACU,cAAR,CAAuBR,KAAvB;AACAF,MAAAA,OAAO,CAACW,KAAR,GAAgBC,IAAhB,CAAsBC,IAAD,IAAU;AAC7BV,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,UADC;AAEPI,UAAAA;AAFO,SAAD,CAAR;AAID,OALD;AAOAb,MAAAA,OAAO,CAACc,gBAAR,GAA2BF,IAA3B,CAAiCG,SAAD,IAAe;AAC7CZ,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,eADC;AAEPM,UAAAA;AAFO,SAAD,CAAR;AAID,OALD;AAMD;AAIF,GA9BQ,EA8BN,CAACb,KAAD,CA9BM,CAAT;AA+BA,sBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIA,KAAK,gBAAI,uDACP,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,CAAJ,gBAGA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALT,CAFF;AAYD;;AAED,eAAeC,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js'\nimport Login from './Components/Login'\nimport Player from './Views/Player'\nimport { getTokenFromResponse } from './util/spotify'\nimport { useStateProviderValue } from './Context/StateProvider'\n\nimport './App.css';\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token }, dispatch] = useStateProviderValue();\n  useEffect(() => {\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      })\n    }\n\n    if (token) {\n      spotify.setAccessToken(token)\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user\n        })\n      })\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists\n        })\n      })\n    }\n\n\n\n  }, [token])\n  return (\n\n    <div className=\"app\">\n      {\n        token ? (<>\n          <Player spotify={spotify} />\n        </>\n        ) : (<Login />)\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}