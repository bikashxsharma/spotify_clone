{"ast":null,"code":"var _jsxFileName = \"/Users/shai-baba/Documents/prg/projects/spotify_clone/src/App.js\";\nimport React, { useEffect } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Login from './Components/Login';\nimport Player from './Views/Player';\nimport { DISCOVER_WEEKLY_ID } from './util/config';\nimport { getTokenFromResponse } from './util/spotify';\nimport { useStateProviderValue } from './Context/StateProvider';\nimport './App.css';\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{\n    token,\n    playlist_id\n  }, dispatch] = useStateProviderValue();\n  useEffect(() => {\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      spotify.setAccessToken(_token);\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      spotify.getPlaylist(playlist_id).then(response => dispatch({\n        type: \"SET_DISCOVER_WEEKLY\",\n        discover_weekly: response\n      }));\n      spotify.getMyTopArtists().then(response => dispatch({\n        type: \"SET_TOP_ARTISTS\",\n        top_artists: response\n      }));\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: spotify\n      });\n      spotify.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user\n        });\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists\n        });\n      });\n    }\n  }, [token, dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, token ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Player, {\n    spotify: spotify,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 14\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/shai-baba/Documents/prg/projects/spotify_clone/src/App.js"],"names":["React","useEffect","SpotifyWebApi","Login","Player","DISCOVER_WEEKLY_ID","getTokenFromResponse","useStateProviderValue","spotify","App","token","playlist_id","dispatch","hash","window","location","_token","access_token","setAccessToken","type","getPlaylist","then","response","discover_weekly","getMyTopArtists","top_artists","getMe","user","getUserPlaylists","playlists"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,oBAAT,QAAqC,gBAArC;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AAEA,OAAO,WAAP;AAEA,MAAMC,OAAO,GAAG,IAAIN,aAAJ,EAAhB;;AAEA,SAASO,GAAT,GAAe;AACb,QAAM,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAyBC,QAAzB,IAAqCL,qBAAqB,EAAhE;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,IAAI,GAAGP,oBAAoB,EAAjC;AACAQ,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AACA,QAAID,MAAJ,EAAY;AACVR,MAAAA,OAAO,CAACU,cAAR,CAAuBF,MAAvB;AAEAJ,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE,WADC;AAEPT,QAAAA,KAAK,EAAEM;AAFA,OAAD,CAAR;AAKAR,MAAAA,OAAO,CAACY,WAAR,CAAoBT,WAApB,EAAiCU,IAAjC,CAAuCC,QAAD,IACpCV,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE,qBADC;AAEPI,QAAAA,eAAe,EAAED;AAFV,OAAD,CADV;AAOAd,MAAAA,OAAO,CAACgB,eAAR,GAA0BH,IAA1B,CAAgCC,QAAD,IAC7BV,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE,iBADC;AAEPM,QAAAA,WAAW,EAAEH;AAFN,OAAD,CADV;AAOAV,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE,aADC;AAEPX,QAAAA,OAAO,EAAEA;AAFF,OAAD,CAAR;AAKAA,MAAAA,OAAO,CAACkB,KAAR,GAAgBL,IAAhB,CAAsBM,IAAD,IAAU;AAC7Bf,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAE,UADC;AAEPQ,UAAAA;AAFO,SAAD,CAAR;AAID,OALD;AAOAnB,MAAAA,OAAO,CAACoB,gBAAR,GAA2BP,IAA3B,CAAiCQ,SAAD,IAAe;AAC7CjB,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAE,eADC;AAEPU,UAAAA;AAFO,SAAD,CAAR;AAID,OALD;AAMD;AACF,GA7CQ,EA6CN,CAACnB,KAAD,EAAQE,QAAR,CA7CM,CAAT;AA8CA,sBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIF,KAAK,gBAAI,uDACP,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,CAAJ,gBAGA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALT,CAFF;AAYD;;AAED,eAAeC,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js'\nimport Login from './Components/Login'\nimport Player from './Views/Player'\nimport { DISCOVER_WEEKLY_ID } from './util/config'\nimport { getTokenFromResponse } from './util/spotify'\nimport { useStateProviderValue } from './Context/StateProvider'\n\nimport './App.css';\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token, playlist_id }, dispatch] = useStateProviderValue();\n  useEffect(() => {\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n    if (_token) {\n      spotify.setAccessToken(_token);\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      })\n\n      spotify.getPlaylist(playlist_id).then((response) =>\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      )\n\n      spotify.getMyTopArtists().then((response) =>\n        dispatch({\n          type: \"SET_TOP_ARTISTS\",\n          top_artists: response,\n        })\n      )\n\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: spotify,\n      })\n\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists,\n        });\n      });\n    }\n  }, [token, dispatch])\n  return (\n\n    <div className=\"app\">\n      {\n        token ? (<>\n          <Player spotify={spotify} />\n        </>\n        ) : (<Login />)\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}